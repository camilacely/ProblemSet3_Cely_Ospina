mutate(area_med = median(area,na.rm=T))
test_barrios <- test_barrios %>%
mutate(area = ifelse(is.na(area),
yes = area_med,
no = area))
#ya no tiene NAs
ggplot(test_barrios, aes(x=area)) +
geom_boxplot(fill= "tomato", alpha=0.4) #pero tiene outliers
######
#Ba√±os
table(is.na(test_barrios$bathrooms))
test_barrios <- test_barrios %>%
mutate(bano_med = median(bathrooms,na.rm=T))
test_barrios <- test_barrios %>%
mutate(bathrooms = ifelse(is.na(bathrooms),
yes = bano_med,
no = bathrooms))
ggplot(test_barrios, aes(x=bathrooms)) +
geom_boxplot(fill= "tomato", alpha=0.4)
########
#Nivel
table(is.na(test_barrios$nivel))
test_barrios <- test_barrios %>%
mutate(niv_med = median(nivel,na.rm=T))
test_barrios <- test_barrios %>%
mutate(nivel = ifelse(is.na(nivel),
yes = niv_med,
no = nivel))
ggplot(test_barrios, aes(x=nivel)) +
geom_boxplot(fill= "tomato", alpha=0.4)
#######
#estrato
table(is.na(test_barrios$estrato))
test_barrios <- test_barrios %>%
mutate(estrato = ifelse(is.na(estrato),
yes = 4,
no = estrato))
summary(test_barrios$estrato)
ggplot(test_barrios, aes(x=estrato)) +
geom_boxplot(fill= "tomato", alpha=0.4)
#######
# price
table(is.na(test_barrios$price)) #TODOS SON NAS PRECISAMENTE PORQUE ES TEST
######### test_barrios queda de 11150 obs
#####
#test_total (test para las ciudades enteras) #11150 OBS == todo test queda en chapinero y poblado
#O SEA QUE TEST_TOTAL PODEMOS CLONARLO DE TEST_BARRIOS
#IMPORTANTE, EN TEST PODEMOS IMPUTAR VALORES PERO NO SE PUEDE ELIMINAR NI UNA SOLA OBSERVACION
test_total <- test_barrios
######### test_total queda de 11150 obs
train_total_df %>%
select(l3, price, property_type, area, dist_highway_ciudades, dist_cbd_ciudades) %>%
tbl_summary(by=l3)
train_total_df <- train_total %>% st_drop_geometry()
train_total_df %>%
select(l3, price, property_type, area, dist_highway_ciudades, dist_cbd_ciudades) %>%
tbl_summary(by=l3)
colnames(train_total_df)
train_barrios_df %>%
select(l3, price, property_type, area, dist_bus, dist_playground, dist_highway, dist_cbd, bedrooms, bathrooms, balcon, extras, ascen, parq, renov, estrato) %>% #complementar porque en mi version aun tiene unos NAs
tbl_summary(by=l3)
train_barrios_ch <- train_barrios
train_barrios_ch <- train_barrios_ch %>% subset(cundinamarca == 1) #aqui si saco solo las de chapinero
leaflet() %>% addTiles() %>% addCircleMarkers(data=train_barrios_ch , color="red") #vamos bien
train_barrios_ch <- train_barrios_ch %>%
mutate(preciomet2 = (price / area) )
summary (train_barrios_ch$preciomet2)
lower_bound_p1<-0
upper_bound_p1<-0.2
lower_bound_p2<-0.2
upper_bound_p2<-0.4
lower_bound_p3<-0.4
upper_bound_p3<-0.6
lower_bound_p4<-0.6
upper_bound_p4<-0.8
lower_bound_p5<-0.8
upper_bound_p5<-1
upper_bound_precio1 <- quantile(train_barrios_ch$preciomet2, upper_bound_p1, na.rm=T)
upper_bound_precio1
upper_bound_precio2 <- quantile(train_barrios_ch$preciomet2, upper_bound_p2, na.rm=T)
upper_bound_precio2
upper_bound_precio3 <- quantile(train_barrios_ch$preciomet2, upper_bound_p3, na.rm=T)
upper_bound_precio3
upper_bound_precio4 <- quantile(train_barrios_ch$preciomet2, upper_bound_p4, na.rm=T)
upper_bound_precio4
upper_bound_precio5 <- quantile(train_barrios_ch$preciomet2, upper_bound_p5, na.rm=T)
upper_bound_precio5
train_barrios_ch <- train_barrios_ch %>%
mutate(precio1 = if_else( preciomet2 <= upper_bound_precio1, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(precio2 = if_else( preciomet2 <= upper_bound_precio2, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(precio2 = if_else( preciomet2 > upper_bound_precio1, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(precio3 = if_else( preciomet2 <= upper_bound_precio3, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(precio3 = if_else( preciomet2 > upper_bound_precio2, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(precio4 = if_else( preciomet2 <= upper_bound_precio4, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(precio4 = if_else( preciomet2 > upper_bound_precio3, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(precio5= if_else( preciomet2 <= upper_bound_precio5, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(precio5 = if_else( preciomet2 > upper_bound_precio4, 1, 0))
#ahora le puedo asignar colores por quintiles
color <- rep(NA, nrow(train_barrios_ch))
color[train_barrios_ch$precio1 == 1] <- "#00A6FB"
color[train_barrios_ch$precio2 == 1] <- "#0582CA"
color[train_barrios_ch$precio3 == 1] <- "#006494"
color[train_barrios_ch$precio4 == 1] <- "#003554"
color[train_barrios_ch$precio5 == 1] <- "#051923"      #azules, el mas oscuro es el mas caro
leaflet() %>% addTiles() %>% addCircleMarkers(data=train_barrios_ch, color= color, fillOpacity=1 , opacity=1, radius=1)
leaflet() %>% addTiles() %>% addCircleMarkers(data=train_barrios_ch, color= color, fillOpacity=1 , opacity=1, radius=1) %>% addCircleMarkers(data=bus_chap, color="red", radius=2)
leaflet() %>% addTiles() %>% addCircleMarkers(data=train_barrios_po , color="red") #vamos bien
train_barrios_po <- train_barrios
train_barrios_po <- train_barrios_po %>% subset(cundinamarca == 0) #aqui si saco solo las de poblado
leaflet() %>% addTiles() %>% addCircleMarkers(data=train_barrios_po , color="red") #vamos bien
train_barrios_po <- train_barrios_po %>%
mutate(preciomet2 = (price / area) )
summary (train_barrios_po$preciomet2)
train_barrios_po <- train_barrios_po %>%
mutate(preciomet2 = (price / area) )
summary (train_barrios_po$preciomet2)
#luego la voy a dividir como en quintiles
lower_bound_p1<-0
upper_bound_p1<-0.2
lower_bound_p2<-0.2
upper_bound_p2<-0.4
lower_bound_p3<-0.4
upper_bound_p3<-0.6
lower_bound_p4<-0.6
upper_bound_p4<-0.8
lower_bound_p5<-0.8
upper_bound_p5<-1
upper_bound_precio1 <- quantile(train_barrios_po$preciomet2, upper_bound_p1, na.rm=T)
upper_bound_precio1
upper_bound_precio2 <- quantile(train_barrios_po$preciomet2, upper_bound_p2, na.rm=T)
upper_bound_precio2
upper_bound_precio3 <- quantile(train_barrios_po$preciomet2, upper_bound_p3, na.rm=T)
upper_bound_precio3
upper_bound_precio4 <- quantile(train_barrios_po$preciomet2, upper_bound_p4, na.rm=T)
upper_bound_precio4
upper_bound_precio5 <- quantile(train_barrios_po$preciomet2, upper_bound_p5, na.rm=T)
upper_bound_precio5
train_barrios_po <- train_barrios_po %>%
mutate(precio1 = if_else( preciomet2 <= upper_bound_precio1, 1, 0))
train_barrios_po <- train_barrios_po %>%
mutate(precio2 = if_else( preciomet2 <= upper_bound_precio2, 1, 0))
train_barrios_po <- train_barrios_po %>%
mutate(precio2 = if_else( preciomet2 > upper_bound_precio1, 1, 0))
train_barrios_po <- train_barrios_po %>%
mutate(precio3 = if_else( preciomet2 <= upper_bound_precio3, 1, 0))
train_barrios_po <- train_barrios_po %>%
mutate(precio3 = if_else( preciomet2 > upper_bound_precio2, 1, 0))
train_barrios_po <- train_barrios_po %>%
mutate(precio4 = if_else( preciomet2 <= upper_bound_precio4, 1, 0))
train_barrios_po <- train_barrios_po %>%
mutate(precio4 = if_else( preciomet2 > upper_bound_precio3, 1, 0))
train_barrios_po <- train_barrios_po %>%
mutate(precio5= if_else( preciomet2 <= upper_bound_precio5, 1, 0))
train_barrios_po <- train_barrios_po %>%
mutate(precio5 = if_else( preciomet2 > upper_bound_precio4, 1, 0))
#ahora le puedo asignar colores por quintiles
color <- rep(NA, nrow(train_barrios_ch))
color[train_barrios_po$precio1 == 1] <- "#00A6FB"
color[train_barrios_po$precio2 == 1] <- "#0582CA"
color[train_barrios_po$precio3 == 1] <- "#006494"
color[train_barrios_po$precio4 == 1] <- "#003554"
color[train_barrios_po$precio5 == 1] <- "#051923"      #azules, el mas oscuro es el mas caro
#color[is.na(train_barrios_ch$preciomet2)] <- "#FFFFFF" #no la corro porque en este caso no hay NAs
###AQUI ME SALE EL MAPA DE PRECIO POR M2
leaflet() %>% addTiles() %>% addCircleMarkers(data=train_barrios_po, color= color, fillOpacity=1 , opacity=1, radius=1)
#AQUI TRAE LOS PUNTOS DE ESTACION DE BUS
leaflet() %>% addTiles() %>% addCircleMarkers(data=train_barrios_po, color= color, fillOpacity=1 , opacity=1, radius=1) %>% addCircleMarkers(data=bus_pobl, color="red", radius=2)
summary (train_barrios_ch$dist_playground)
summary (train_barrios_ch$dist_playground)
upper_bound_g1<-0.2
upper_bound_g2<-0.4
upper_bound_g3<-0.6
upper_bound_g4<-0.8
upper_bound_g5<-1
upper_bound_pg1 <- quantile(train_barrios_ch$dist_playground, upper_bound_g1, na.rm=T)
upper_bound_pg1
upper_bound_pg2 <- quantile(train_barrios_ch$dist_playground, upper_bound_g2, na.rm=T)
upper_bound_pg2
upper_bound_pg3 <- quantile(train_barrios_ch$dist_playground, upper_bound_g3, na.rm=T)
upper_bound_pg3
upper_bound_pg4 <- quantile(train_barrios_ch$dist_playground, upper_bound_g4, na.rm=T)
upper_bound_pg4
upper_bound_pg5 <- quantile(train_barrios_ch$dist_playground, upper_bound_g5, na.rm=T)
upper_bound_pg5
train_barrios_ch <- train_barrios_ch %>%
mutate(pg1 = if_else( dist_playground <= upper_bound_pg1, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(pg2 = if_else( dist_playground <= upper_bound_pg2, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(pg2 = if_else( dist_playground > upper_bound_pg1, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(pg3 = if_else( dist_playground <= upper_bound_pg3, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(pg3 = if_else( dist_playground > upper_bound_pg2, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(pg4 = if_else( dist_playground <= upper_bound_pg4, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(pg4 = if_else( dist_playground > upper_bound_pg3, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(pg5= if_else( dist_playground <= upper_bound_pg5, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(pg5 = if_else( dist_playground > upper_bound_pg4, 1, 0))
colorpg <- rep(NA, nrow(train_barrios_ch))
colorpg[train_barrios_ch$pg1 == 1] <- "#E8FCCF"
colorpg[train_barrios_ch$pg2 == 1] <- "#96E072"
colorpg[train_barrios_ch$pg3 == 1] <- "#3DA35D"
colorpg[train_barrios_ch$pg4 == 1] <- "#3E8914"
colorpg[train_barrios_ch$pg5 == 1] <- "#134611"  #verdes, el mas oscuro es el mas lejos del playground
leaflet() %>% addTiles() %>% addCircleMarkers(data=train_barrios_ch, color= colorpg, fillOpacity=1 , opacity=1, radius=1)
summary (train_barrios_ch$dist_cbd)
summary (train_barrios_ch$dist_cbd)
upper_bound_g1<-0.2  #lo voy a dejar igualito porque no le voy a cambiar los valores
upper_bound_g2<-0.4
upper_bound_g3<-0.6
upper_bound_g4<-0.8
upper_bound_g5<-1
upper_bound_pg1 <- quantile(train_barrios_ch$dist_cbd, upper_bound_g1, na.rm=T)
upper_bound_pg1
upper_bound_pg2 <- quantile(train_barrios_ch$dist_cbd, upper_bound_g2, na.rm=T)
upper_bound_pg2
upper_bound_pg3 <- quantile(train_barrios_ch$dist_cbd, upper_bound_g3, na.rm=T)
upper_bound_pg3
upper_bound_pg4 <- quantile(train_barrios_ch$dist_cbd, upper_bound_g4, na.rm=T)
upper_bound_pg4
upper_bound_pg5 <- quantile(train_barrios_ch$dist_cbd, upper_bound_g5, na.rm=T)
upper_bound_pg5
train_barrios_ch <- train_barrios_ch %>%
mutate(c1 = if_else( dist_cbd <= upper_bound_pg1, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(c2 = if_else( dist_cbd <= upper_bound_pg2, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(c2 = if_else( dist_cbd > upper_bound_pg1, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(c3 = if_else( dist_cbd <= upper_bound_pg3, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(c3 = if_else( dist_cbd > upper_bound_pg2, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(c4 = if_else( dist_cbd <= upper_bound_pg4, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(c4 = if_else( dist_cbd > upper_bound_pg3, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(c5= if_else( dist_cbd <= upper_bound_pg5, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(c5 = if_else( dist_cbd > upper_bound_pg4, 1, 0))
colorc <- rep(NA, nrow(train_barrios_ch))
colorc[train_barrios_ch$pg1 == 1] <- "#F7B267"
colorc[train_barrios_ch$pg2 == 1] <- "#F79D65"
colorc[train_barrios_ch$pg3 == 1] <- "#F4845F"
colorc[train_barrios_ch$pg4 == 1] <- "#F27059"
colorc[train_barrios_ch$pg5 == 1] <- "#F25C54"  #rosas, el mas oscuro es el mas lejos del cbd
leaflet() %>% addTiles() %>% addCircleMarkers(data=train_barrios_ch, color= colorc, fillOpacity=1 , opacity=1, radius=1)
upper_bound_pg1 <- quantile(train_barrios_ch$dist_cbd, upper_bound_g1, na.rm=T)
upper_bound_pg1
summary (train_barrios_ch$dist_cbd)
summary (train_barrios_ch$dist_playground)
summary (train_barrios_ch$dist_cbd)
upper_bound_c1<-0.2  #lo voy a dejar igualito porque no le voy a cambiar los valores
upper_bound_c2<-0.4
upper_bound_c3<-0.6
upper_bound_c4<-0.8
upper_bound_c5<-1
upper_bound_c1 <- quantile(train_barrios_ch$dist_cbd, upper_bound_c1, na.rm=T)
upper_bound_pg1
upper_bound_c1
summary (train_barrios_ch$dist_cbd)
summary (train_barrios_ch$dist_playground)
upper_bound_c1
upper_bound_pg1
summary (train_barrios_ch$dist_cbd)
upper_bound_c1<-0.2  #lo voy a dejar igualito porque no le voy a cambiar los valores
upper_bound_c2<-0.4
upper_bound_c3<-0.6
upper_bound_c4<-0.8
upper_bound_c5<-1
upper_bound_c1 <- quantile(train_barrios_ch$dist_cbd, upper_bound_c1, na.rm=T)
upper_bound_c1
upper_bound_pg1
summary (train_barrios_ch$dist_bus)
upper_bound_b1<-0.2
upper_bound_b2<-0.4
upper_bound_b3<-0.6
upper_bound_b4<-0.8
upper_bound_b5<-1
upper_bound_bus1 <- quantile(train_barrios_ch$dist_bus, upper_bound_b1, na.rm=T)
upper_bound_bus1
upper_bound_bus2 <- quantile(train_barrios_ch$dist_bus, upper_bound_b2, na.rm=T)
upper_bound_bus2
upper_bound_bus3 <- quantile(train_barrios_ch$dist_bus, upper_bound_b3, na.rm=T)
upper_bound_bus3
upper_bound_bus4 <- quantile(train_barrios_ch$dist_bus, upper_bound_b4, na.rm=T)
upper_bound_bus4
upper_bound_bus5 <- quantile(train_barrios_ch$dist_bus, upper_bound_b5, na.rm=T)
upper_bound_bus5
train_barrios_ch <- train_barrios_ch %>%
mutate(bus1 = if_else( dist_bus <= upper_bound_bus1, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(bus2 = if_else( dist_bus <= upper_bound_bus2, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(bus2 = if_else( dist_bus > upper_bound_bus1, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(bus3 = if_else( dist_bus <= upper_bound_bus3, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(bus3 = if_else( dist_bus > upper_bound_bus2, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(bus4 = if_else( dist_bus <= upper_bound_bus4, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(bus4 = if_else( dist_bus > upper_bound_bus3, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(bus5= if_else( dist_bus <= upper_bound_bus5, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(bus5 = if_else( dist_bus > upper_bound_bus4, 1, 0))
colorb <- rep(NA, nrow(train_barrios_ch))
colorb[train_barrios_ch$bus1 == 1] <- "#E8FCCF"
colorb[train_barrios_ch$bus2 == 1] <- "#96E072"
colorb[train_barrios_ch$bus3 == 1] <- "#3DA35D"
colorb[train_barrios_ch$bus4 == 1] <- "#3E8914"
colorb[train_barrios_ch$bus5 == 1] <- "#134611"  #verdes, el mas oscuro es el mas lejos del bus
leaflet() %>% addTiles() %>% addCircleMarkers(data=train_barrios_ch, color= colorb, fillOpacity=1 , opacity=1, radius=1)
summary (train_barrios_ch$dist_cbd)
upper_bound_c1<-0.2  #lo voy a dejar igualito porque no le voy a cambiar los valores
upper_bound_c2<-0.4
upper_bound_c3<-0.6
upper_bound_c4<-0.8
upper_bound_c5<-1
upper_bound_c1 <- quantile(train_barrios_ch$dist_cbd, upper_bound_c1, na.rm=T)
upper_bound_c1
upper_bound_c2 <- quantile(train_barrios_ch$dist_cbd, upper_bound_c2, na.rm=T)
upper_bound_c2
upper_bound_c3 <- quantile(train_barrios_ch$dist_cbd, upper_bound_c3, na.rm=T)
upper_bound_c3
upper_bound_c4 <- quantile(train_barrios_ch$dist_cbd, upper_bound_c4, na.rm=T)
upper_bound_c4
upper_bound_c5 <- quantile(train_barrios_ch$dist_cbd, upper_bound_c5, na.rm=T)
upper_bound_c5
train_barrios_ch <- train_barrios_ch %>%
mutate(c1 = if_else( dist_cbd <= upper_bound_c1, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(c2 = if_else( dist_cbd <= upper_bound_c2, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(c2 = if_else( dist_cbd > upper_bound_c1, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(c3 = if_else( dist_cbd <= upper_bound_c3, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(c3 = if_else( dist_cbd > upper_bound_c2, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(c4 = if_else( dist_cbd <= upper_bound_c4, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(c4 = if_else( dist_cbd > upper_bound_c3, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(c5= if_else( dist_cbd <= upper_bound_c5, 1, 0))
train_barrios_ch <- train_barrios_ch %>%
mutate(c5 = if_else( dist_cbd > upper_bound_c4, 1, 0))
colorc <- rep(NA, nrow(train_barrios_ch))
colorc[train_barrios_ch$c1 == 1] <- "#F7B267"
colorc[train_barrios_ch$c2 == 1] <- "#F79D65"
colorc[train_barrios_ch$c3 == 1] <- "#F4845F"
colorc[train_barrios_ch$c4 == 1] <- "#F27059"
colorc[train_barrios_ch$c5 == 1] <- "#F25C54"  #rosas, el mas oscuro es el mas lejos del cbd
leaflet() %>% addTiles() %>% addCircleMarkers(data=train_barrios_ch, color= colorc, fillOpacity=1 , opacity=1, radius=1)
train_barrios_po <- train_barrios
test_barrios_po <- test_barrios
train_barrios_po <- train_barrios_po %>% subset(cundinamarca == 0)
test_barrios_po <- test_barrios_po %>% subset(cundinamarca == 0)
base_pobl <- rbind (train_barrios_po, test_barrios_po)
tt_mapa_pobl <- tt_barrios
tt_mapa_pobl <- tt_mapa_pobl %>% subset(cundinamarca == 0)
summary (tt_mapa_pobl$dist_cbd)
tt_mapa_pobl <- tt_barrios
tt_mapa_pobl <- tt_mapa_pobl %>% subset(cundinamarca == 0)
summary (tt_mapa_pobl$dist_cbd)
upper_bound_cp1<-0.2  #lo voy a dejar igualito porque no le voy a cambiar los valores
upper_bound_cp2<-0.4
upper_bound_cp3<-0.6
upper_bound_cp4<-0.8
upper_bound_cp5<-1
upper_bound_cp1 <- quantile(tt_mapa_pobl$dist_cbd, upper_bound_cp1, na.rm=T)
upper_bound_cp1
upper_bound_cp2 <- quantile(tt_mapa_pobl$dist_cbd, upper_bound_cp2, na.rm=T)
upper_bound_cp2
upper_bound_cp3 <- quantile(tt_mapa_pobl$dist_cbd, upper_bound_cp3, na.rm=T)
upper_bound_cp3
upper_bound_cp4 <- quantile(tt_mapa_pobl$dist_cbd, upper_bound_cp4, na.rm=T)
upper_bound_cp4
upper_bound_cp5 <- quantile(tt_mapa_pobl$dist_cbd, upper_bound_cp5, na.rm=T)
upper_bound_cp5
tt_mapa_pobl <- tt_mapa_pobl %>%
mutate(cp1 = if_else( dist_cbd <= upper_bound_cp1, 1, 0))
tt_mapa_pobl <- tt_mapa_pobl %>%
mutate(cp2 = if_else( dist_cbd <= upper_bound_cp2, 1, 0))
tt_mapa_pobl <- tt_mapa_pobl %>%
mutate(cp2 = if_else( dist_cbd > upper_bound_cp1, 1, 0))
tt_mapa_pobl <- tt_mapa_pobl %>%
mutate(cp3 = if_else( dist_cbd <= upper_bound_cp3, 1, 0))
tt_mapa_pobl <- tt_mapa_pobl %>%
mutate(cp3 = if_else( dist_cbd > upper_bound_cp2, 1, 0))
tt_mapa_pobl <- tt_mapa_pobl %>%
mutate(cp4 = if_else( dist_cbd <= upper_bound_cp4, 1, 0))
tt_mapa_pobl <- tt_mapa_pobl %>%
mutate(cp4 = if_else( dist_cbd > upper_bound_cp3, 1, 0))
tt_mapa_pobl <- tt_mapa_pobl %>%
mutate(cp5= if_else( dist_cbd <= upper_bound_cp5, 1, 0))
tt_mapa_pobl <- tt_mapa_pobl %>%
mutate(cp5 = if_else( dist_cbd > upper_bound_cp4, 1, 0))
colorcp <- rep(NA, nrow(train_barrios_ch))
colorcp[tt_mapa_pobl$cp1 == 1] <- "#F7B267"
colorcp[tt_mapa_pobl$cp2 == 1] <- "#F79D65"
colorcp[tt_mapa_pobl$cp3 == 1] <- "#F4845F"
colorcp[tt_mapa_pobl$cp4 == 1] <- "#F27059"
colorcp[tt_mapa_pobl$cp5 == 1] <- "#F25C54"  #naranjas, el mas oscuro es el mas lejos del cbd
leaflet() %>% addTiles() %>% addCircleMarkers(data=tt_mapa_pobl, color= colorcp, fillOpacity=1 , opacity=1, radius=1)
summary (train_barrios_ch$bedrooms)
summary (train_barrios_ch$bedrooms)
upper_bound_cr1<-0.2
upper_bound_cr2<-0.4
upper_bound_cr3<-0.6
upper_bound_cr4<-0.8
upper_bound_cr5<-1
upper_bound_cr1 <- quantile(train_barrios_ch$bedrooms, upper_bound_cr1, na.rm=T)
upper_bound_cr1
upper_bound_cr2 <- quantile(train_barrios_ch$bedrooms, upper_bound_cr2, na.rm=T)
upper_bound_cr2
upper_bound_cr3 <- quantile(train_barrios_ch$bedrooms, upper_bound_cr3, na.rm=T)
upper_bound_cr3
upper_bound_cr4 <- quantile(train_barrios_ch$bedrooms, upper_bound_cr4, na.rm=T)
upper_bound_cr4
upper_bound_cr5 <- quantile(train_barrios_ch$bedrooms, upper_bound_cr5, na.rm=T)
upper_bound_cr5
upper_bound_cr2
summary (train_barrios_ch$bedrooms)
colorcr <- rep(NA, nrow(train_barrios_ch))
colorcr[train_barrios_ch$bed_0 == 1] <- "#F2F7FF"
colorcr[train_barrios_ch$bed_1 == 1] <- "#C9DCFF"
colorcr[train_barrios_ch$bed_2 == 1] <- "#B2C9FF"
colorcr[train_barrios_ch$bed_3 == 1] <- "#BE99FF"
colorcr[train_barrios_ch$bed_more == 1] <- "#9D71E8"  #lilas, el mas oscuro es el mas numero de habitaciones
leaflet() %>% addTiles() %>% addCircleMarkers(data=train_barrios_ch, color= colorcr, fillOpacity=1 , opacity=1, radius=1)
summary (train_barrios_ch$bedrooms)
colorcr <- rep(NA, nrow(train_barrios_ch))
colorcr[train_barrios_ch$bed_0 == 1] <- "#F2F7FF"
colorcr[train_barrios_ch$bed_1 == 1] <- "#F2F7FF"
colorcr[train_barrios_ch$bed_2 == 1] <- "#B2C9FF"
colorcr[train_barrios_ch$bed_3 == 1] <- "#9D71E8"
colorcr[train_barrios_ch$bed_more == 1] <- "#9D71E8"  #lilas, el mas oscuro es el mas numero de habitaciones
leaflet() %>% addTiles() %>% addCircleMarkers(data=train_barrios_ch, color= colorcr, fillOpacity=1 , opacity=1, radius=1)
summary (train_barrios_ch$bedrooms)
colorcr <- rep(NA, nrow(train_barrios_ch))
colorcr[train_barrios_ch$bed_0 == 1] <- "#F2F7FF"
colorcr[train_barrios_ch$bed_1 == 1] <- "#F2F7FF"
colorcr[train_barrios_ch$bed_2 == 1] <- "#F2F7FF"
colorcr[train_barrios_ch$bed_3 == 1] <- "#9D71E8"
colorcr[train_barrios_ch$bed_more == 1] <- "#9D71E8"  #lilas, el mas oscuro es el mas numero de habitaciones
leaflet() %>% addTiles() %>% addCircleMarkers(data=train_barrios_ch, color= colorcr, fillOpacity=1 , opacity=1, radius=1)
ctrl<- trainControl(method = "cv",
number = 5,
summaryFunction = fiveStats,
classProbs = TRUE,
verbose = FALSE,
savePredictions = T)
grid_default <- expand.grid(nrounds = 250,
max_depth = 2,
eta = 0.5 , #tasa a la cual aprende, entre menor mas se demora
gamma = c(0,1),
min_child_weight = c(10, 25,50),
colsample_bytree = c(0.7),
subsample = c(0.6))
grid_default <- expand.grid(nrounds = 250,
max_depth = 2,
eta = 0.5 , #tasa a la cual aprende, entre menor mas se demora
gamma = c(0,1),
min_child_weight = 25,
colsample_bytree = c(0.7),
subsample = c(0.6))
set.seed(123)
xgboost <- train(
price ~ cundinamarca + bedrooms + dist_bus + dist_cafe + dist_cinema + dist_hospital + dist_theatre + dist_university + dist_park + dist_playground +
dist_cbd + oriente + penthouse + balcon + renov + vista + ascen + parq + bathrooms + area + estrato + apto,
data = train_barrios,
method = "xgbTree",
trControl = ctrl,
metric = "error",
tuneGrid = grid_default,
preProcess = c("center", "scale")
)
xgboost <- train(
price ~ cundinamarca + bedrooms + dist_bus + dist_cafe + dist_cinema + dist_hospital + dist_theatre + dist_university + dist_park + dist_playground +
dist_cbd + oriente + penthouse + balcon + renov + vista + ascen + parq + bathrooms + area + estrato + apto,
data = train_barrios,
method = "xgbTree",
trControl = ctrl,
metric = "Sens",
tuneGrid = grid_default,
preProcess = c("center", "scale")
)
xgboost <- train(
price ~ cundinamarca + bedrooms + dist_bus + dist_cafe + dist_cinema + dist_hospital + dist_theatre + dist_university + dist_park + dist_playground +
dist_cbd + oriente + penthouse + balcon + renov + vista + ascen + parq + bathrooms + area + estrato + apto,
data = train_barrios,
method = "xgbTree",
trControl = ctrl,
metric = "Sens",
tuneGrid = grid_default,
preProcess = c("center", "scale")
)
View(test_barrios)
